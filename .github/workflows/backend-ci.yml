name: Backend CI/CD

on:
  push:
    branches:
      - main
      - '*'
    paths:
      - 'backend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      # - name: Run linting
      #   run: |
      #     flake8 .
      #     black . --check
      #     isort . --check-only

      # - name: Run tests
      #   run: |
      #     pytest tests

  deploy:
    # if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build_and_test
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate Docker to Google Container Registry
        run: gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev
        env:
          GCP_REGION: ${{ secrets.GCP_REGION }}
      
      - name: Build and push Docker image
        run: |
          docker build -t ${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${REPOSITORY}/backend-api:${{ github.sha }} .
          docker push ${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${REPOSITORY}/backend-api:${{ github.sha }}
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          REPOSITORY: ${{ secrets.ARTIFACT_REPOSITORY }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: backend-api
          image: ${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${REPOSITORY}/backend-api:${{ github.sha }}
          region: ${{ secrets.GCP_REGION }}
          env_vars: |
            GOOGLE_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
            FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          REPOSITORY: ${{ secrets.ARTIFACT_REPOSITORY }}
              
      - name: Show Output
        run: echo "Cloud Run URL - ${{ steps.deploy.outputs.url }}"
